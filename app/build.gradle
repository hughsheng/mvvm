apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


//本地properties文件配置数据
Properties properties = new Properties()
def writer = project.rootProject.file('local_config.properties')
properties.load(writer.newDataInputStream())
def verCode = properties.getProperty("mainVersionCode")
def appVersionName = properties.getProperty("mainVersionName")
def appversionCode = verCode.toInteger()
def runTasks = gradle.startParameter.taskNames


android {
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        applicationId "com.example.mvvmdemo"
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode appversionCode
        versionName appVersionName
        flavorDimensions "default"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // Enabling multidex support.
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [eventBusIndex: 'com.bandeng.MyEventBusIndex']
            }
        }

        //设置支持的so库架构类型
        ndk {
            abiFilters 'armeabi', "armeabi-v7a", "x86"
        }
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':mvvmlibrary')
    implementation project(path: ':httplibrary')
    implementation AndroidX.appcompat
    implementation AndroidX.constraintlayout
    implementation Android.meteria
    implementation AndroidX.lifeCycleExtension
    implementation AndroidX.lifecycleRuntime
    //google官方下拉刷新控件
    implementation AndroidX.swiperefreshlayout
    //为了使用谷歌最新的MergeAdapter导入新版本的库 by Leo
    implementation AndroidX.recyclerview
    //paging
    implementation AndroidX.pagingRuntime
    //谷歌分包方案，解决方法数最大值65536限制(api21以下需要该库)
    implementation AndroidX.multidex

    //zxing
    implementation Android.zxing

    //hilt
    implementation Hilt.daggerRuntime
    kapt Hilt.daggerCompiler
    implementation Hilt.viewModule
    kapt Hilt.compiler

    //====================测试库=========================
    testImplementation Depend.junit
    androidTestImplementation Depend.androidTestJunit
    androidTestImplementation Depend.espressoCore

    //===========================第三方库===============================

    //evenbus
    implementation EventBus.eventBus
    //annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.0.1'


    //leakcanary内存泄漏检测
    debugImplementation Leakcanary.open
    releaseImplementation Leakcanary.close

    //gson
    implementation Gson.runtime

    //glide图片加载库
    implementation Glide.runtime
    implementation Glide.okhttp3Integration
    implementation Glide.annotations
    annotationProcessor Glide.compiler


    //rxandroid
    implementation Rxandroid.rxjava2
    implementation Rxandroid.rxandroid

    //retrofit
    implementation Retrofit.runtime
    implementation Retrofit.gson
    implementation Retrofit.adapter
    implementation Retrofit.logging

    //兼容kotlin
    implementation Kt.stdlibJdk7

    //屏幕适配
    implementation AutoSize.runtime

    //bugly
    implementation Bugly.upgrade
    implementation Bugly.nativecrashreport

}